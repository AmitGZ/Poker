{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amit Zohar\\\\Desktop\\\\PokerReact\\\\front\\\\src\\\\components\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport ConnectedUsers from './ConnectedUsers';\nimport Rooms from './Rooms';\nimport Chat from './Chat';\nimport Lobby from './Lobby';\nimport images from \"../resources/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = ({\n  joinRoom,\n  rooms,\n  sendMessage,\n  messages,\n  users,\n  page\n}) => {\n  _s();\n\n  const width = 946;\n  const height = Math.round(width * 0.519);\n  var canvas = useRef(null);\n  if (!canvas) return;\n  var ctx = canvas.getContext(\"2d\");\n  var img = new Image();\n  img.src = images.poker_table;\n\n  img.onload = () => {\n    ctx.drawImage(img, 0, 0, width, height);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: page === \"Lobby\" ? /*#__PURE__*/_jsxDEV(Lobby, {\n      joinRoom: joinRoom,\n      rooms: rooms\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leave-room\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: () => joinRoom(\"Lobby\"),\n          children: \"Leave Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvas,\n        id: \"myCanvas\",\n        width: \"1000\",\n        height: \"519\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Chat, {\n        sendMessage: sendMessage,\n        messages: messages,\n        users: users,\n        joinRoom: joinRoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Game, \"OiAXxxxsYj+jaR+r4tdEB3xCcqw=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["C:/Users/Amit Zohar/Desktop/PokerReact/front/src/components/Game.js"],"names":["useState","useEffect","useRef","Form","Button","ConnectedUsers","Rooms","Chat","Lobby","images","Game","joinRoom","rooms","sendMessage","messages","users","page","width","height","Math","round","canvas","ctx","getContext","img","Image","src","poker_table","onload","drawImage"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA,WAAnB;AAAgCC,EAAAA,QAAhC;AAA0CC,EAAAA,KAA1C;AAAiDC,EAAAA;AAAjD,CAAD,KAA4D;AAAA;;AACrE,QAAMC,KAAK,GAAG,GAAd;AACA,QAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,GAAE,KAAlB,CAAf;AAEI,MAAII,MAAM,GAAGnB,MAAM,CAAC,IAAD,CAAnB;AACA,MAAG,CAACmB,MAAJ,EAAY;AACZ,MAAIC,GAAG,GAAGD,MAAM,CAACE,UAAP,CAAkB,IAAlB,CAAV;AACA,MAAIC,GAAG,GAAG,IAAIC,KAAJ,EAAV;AACAD,EAAAA,GAAG,CAACE,GAAJ,GAAUjB,MAAM,CAACkB,WAAjB;;AACAH,EAAAA,GAAG,CAACI,MAAJ,GAAa,MAAK;AACdN,IAAAA,GAAG,CAACO,SAAJ,CAAcL,GAAd,EAAkB,CAAlB,EAAoB,CAApB,EAAsBP,KAAtB,EAA4BC,MAA5B;AACH,GAFD;;AAKJ,sBACI;AAAA,cAEKF,IAAI,KAAM,OAAX,gBACI,QAAC,KAAD;AAAO,MAAA,QAAQ,EAAEL,QAAjB;AAA2B,MAAA,KAAK,EAAIC;AAApC;AAAA;AAAA;AAAA;AAAA,YADJ,gBAEI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,QAAhB;AAAyB,UAAA,OAAO,EAAE,MAAMD,QAAQ,CAAC,OAAD,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AACA,QAAA,GAAG,EAAIU,MADP;AAEE,QAAA,EAAE,EAAC,UAFL;AAGE,QAAA,KAAK,EAAC,MAHR;AAIE,QAAA,MAAM,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA,cAJJ,eAUI,QAAC,IAAD;AAAM,QAAA,WAAW,EAAER,WAAnB;AAAgC,QAAA,QAAQ,EAAEC,QAA1C;AAAoD,QAAA,KAAK,EAAEC,KAA3D;AAAkE,QAAA,QAAQ,EAAIJ;AAA9E;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAlCD;;GAAMD,I;;KAAAA,I;AAoCN,eAAeA,IAAf","sourcesContent":["import { useState, useEffect, useRef} from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport ConnectedUsers from './ConnectedUsers';\r\nimport Rooms from './Rooms';\r\nimport Chat from './Chat';\r\nimport Lobby from './Lobby';\r\nimport images from \"../resources/index\"\r\n\r\n\r\nconst Game = ({ joinRoom, rooms, sendMessage, messages, users ,page}) => {\r\n    const width = 946;\r\n    const height = Math.round(width *0.519);\r\n\r\n        var canvas = useRef(null);\r\n        if(!canvas) return;\r\n        var ctx = canvas.getContext(\"2d\");\r\n        var img = new Image();\r\n        img.src = images.poker_table;\r\n        img.onload = ()=> {\r\n            ctx.drawImage(img,0,0,width,height)\r\n        }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n            (page ===  \"Lobby\")?\r\n                <Lobby joinRoom={joinRoom} rooms = {rooms}/> :\r\n                <div>\r\n                    <div className='leave-room'>\r\n                        <Button variant='danger' onClick={() => joinRoom(\"Lobby\")}>Leave Room</Button>\r\n                    </div>\r\n                    <canvas\r\n                    ref = {canvas}\r\n                      id=\"myCanvas\"\r\n                      width=\"1000\"\r\n                      height=\"519\">\r\n                    </canvas>\r\n                    <Chat sendMessage={sendMessage} messages={messages} users={users} joinRoom = {joinRoom}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}