{"version":3,"sources":["components/Login.js","components/ConnectedUsers.js","components/NewRoomForm.js","components/NewRoomButton.js","components/Rooms.js","components/SendMessageForm.js","components/MessageContainer.js","components/Chat.js","components/Lobby.js","resources/poker_table.png","resources/user.png","resources/background.png","resources/Cards/back_of_card.png","resources/dealer.png","resources/Cards/2_of_hearts.png","resources/Cards/3_of_hearts.png","resources/Cards/4_of_hearts.png","resources/Cards/5_of_hearts.png","resources/Cards/6_of_hearts.png","resources/Cards/7_of_hearts.png","resources/Cards/8_of_hearts.png","resources/Cards/9_of_hearts.png","resources/Cards/10_of_hearts.png","resources/Cards/jack_of_hearts.png","resources/Cards/queen_of_hearts.png","resources/Cards/king_of_hearts.png","resources/Cards/ace_of_hearts.png","resources/Cards/2_of_spades.png","resources/Cards/3_of_spades.png","resources/Cards/4_of_spades.png","resources/Cards/5_of_spades.png","resources/Cards/6_of_spades.png","resources/Cards/7_of_spades.png","resources/Cards/8_of_spades.png","resources/Cards/9_of_spades.png","resources/Cards/10_of_spades.png","resources/Cards/jack_of_spades.png","resources/Cards/queen_of_spades.png","resources/Cards/king_of_spades.png","resources/Cards/ace_of_spades.png","resources/Cards/2_of_clubs.png","resources/Cards/3_of_clubs.png","resources/Cards/4_of_clubs.png","resources/Cards/5_of_clubs.png","resources/Cards/6_of_clubs.png","resources/Cards/7_of_clubs.png","resources/Cards/8_of_clubs.png","resources/Cards/9_of_clubs.png","resources/Cards/10_of_clubs.png","resources/Cards/jack_of_clubs.png","resources/Cards/queen_of_clubs.png","resources/Cards/king_of_clubs.png","resources/Cards/ace_of_clubs.png","resources/Cards/2_of_diamonds.png","resources/Cards/3_of_diamonds.png","resources/Cards/4_of_diamonds.png","resources/Cards/5_of_diamonds.png","resources/Cards/6_of_diamonds.png","resources/Cards/7_of_diamonds.png","resources/Cards/8_of_diamonds.png","resources/Cards/9_of_diamonds.png","resources/Cards/10_of_diamonds.png","resources/Cards/jack_of_diamonds.png","resources/Cards/queen_of_diamonds.png","resources/Cards/king_of_diamonds.png","resources/Cards/ace_of_diamonds.png","resources/index.js","components/Cards.js","components/Table.js","components/Game.js","components/UserStats.js","App.js","reportWebVitals.js","index.js"],"names":["Login","joinGame","useState","user","setUser","password","setPassword","Form","className","onSubmit","e","preventDefault","Group","Control","placeholder","onChange","target","value","type","Button","variant","disabled","ConnectedUsers","users","map","u","idx","username","NewRoomForm","createRoom","enterMoney","roomName","setRoomName","NewRoomButton","show","state","color","text","hide","toggle","setToggle","onClick","style","backgroundColor","width","Rooms","rooms","joinRoom","x","parseInt","money","setEnterMoney","id","xmin","xmax","room","name","numberOfPlayers","SendMessageForm","sendMessage","message","setMessage","InputGroup","FormControl","Append","MessageContainer","messages","messageRef","useRef","useEffect","current","scrollHeight","clientHeight","scrollTo","left","top","behavior","ref","m","index","Chat","closeConnection","Lobby","images_src","poker_table","background","back_of_card","dealer","two_of_hearts","three_of_hearts","four_of_hearts","five_of_hearts","six_of_hearts","seven_of_hearts","eight_of_hearts","nine_of_hearts","ten_of_hearts","jack_of_hearts","queen_of_hearts","king_of_hearts","ace_of_hearts","two_of_spades","three_of_spades","four_of_spades","five_of_spades","six_of_spades","seven_of_spades","eight_of_spades","nine_of_spades","ten_of_spades","jack_of_spades","queen_of_spades","king_of_spades","ace_of_spades","two_of_clubs","three_of_clubs","four_of_clubs","five_of_clubs","six_of_clubs","seven_of_clubs","eight_of_clubs","nine_of_clubs","ten_of_clubs","jack_of_clubs","queen_of_clubs","king_of_clubs","ace_of_clubs","two_of_diamonds","three_of_diamonds","four_of_diamonds","five_of_diamonds","six_of_diamonds","seven_of_diamonds","eight_of_diamonds","nine_of_diamonds","ten_of_diamonds","jack_of_diamonds","queen_of_diamonds","king_of_diamonds","ace_of_diamonds","cardValues","cardSuits","Table","LeaveRoom","connection","roomStatus","WIDTH","HEIGHT","Math","round","USER_SIZE","POSITIONS","CARD_WIDTH","CARD_HEIGHT","CARD_OFFSET","CARD_POSITIONS","i","push","image_num","Object","keys","length","loaded_num","setLoadedNum","loaded_img","setLoadedImg","Talking","setTalking","setDealer","turnTime","counter","setCounter","y","myInterval","setInterval","stage","clearInterval","drawUser","context","position","drawImage","offset","isActive","cards","suit","dealerPosition","isWinner","font","strokeStyle","fillStyle","lineWidth","strokeText","fillText","textAlign","moneyInTable","moneyInTurn","tmp","src","Image","onload","ctx","document","getElementById","getContext","talkingPosition","undefined","cardsOnTable","pot","drawTableStatus","console","log","height","marginLeft","marginTop","maxValue","turnStake","yreverse","axis","ymin","ymax","invoke","Game","roomId","UserStats","padding","App","setConnection","setMessages","setRoomStatus","setRooms","a","HubConnectionBuilder","withUrl","configureLogging","LogLevel","Information","build","serverTimeoutInMilliseconds","on","status","alert","onclose","start","zIndex","backgroundImage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.661c3c6e.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst Login = ({ joinGame }) => {\r\n    const [user, setUser] = useState();\r\n    const [password, setPassword] = useState();\r\n\r\n    return(\r\n        <Form className='login'\r\n            onSubmit={e => {\r\n                e.preventDefault();\r\n                joinGame(user,password);\r\n            }} >\r\n            <Form.Group>\r\n                <Form.Control placeholder=\"name\" onChange={e => setUser(e.target.value)} />\r\n                <Form.Control placeholder=\"password\" type=\"password\" onChange={e => setPassword(e.target.value)} />\r\n                <Button variant=\"success\" type=\"submit\" disabled={!user || !password}>Join</Button>\r\n            </Form.Group>\r\n        </Form>)\r\n}\r\n\r\nexport default Login;","const ConnectedUsers = ({ users }) => {\r\n    return(\r\n    <div className='user-list'>\r\n        <h4>Connected Users</h4>\r\n        {users.map((u, idx) => <h5 key={idx}>{u.username}</h5>)}\r\n    </div>);\r\n};\r\n\r\nexport default ConnectedUsers;","import { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst NewRoomForm = ({ createRoom, user , enterMoney}) => {\r\n    const [roomName, setRoomName] = useState();\r\n\r\n    return(\r\n        <Form className='login'\r\n            onSubmit={e => {\r\n                e.preventDefault();\r\n                createRoom(roomName, enterMoney);\r\n            }} >\r\n            <Form.Group>\r\n                <Form.Control placeholder=\"Room Name\" onChange={e => setRoomName(e.target.value)} />\r\n                <Button variant=\"success\" type=\"submit\" disabled={!roomName}>Join Room</Button>\r\n            </Form.Group>\r\n        </Form>)\r\n};\r\n\r\nexport default NewRoomForm;","import PropTypes from 'prop-types';\r\nimport { useState,useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport Login from './Login';\r\nimport NewRoomForm from \"./NewRoomForm\"\r\n\r\n\r\nconst NewRoomButton = ({createRoom, user, enterMoney}) => {\r\n    let show ={\r\n        state: true,\r\n            color:'green',\r\n            text:'New Room'\r\n        }\r\n\r\n    let hide ={\r\n        state: false,\r\n            color:'red',\r\n            text:'Hide'\r\n        }\r\n        \r\n    const [toggle,setToggle] = useState(show)\r\n\r\n    function onClick(){\r\n        setToggle(toggle.state?hide:show)\r\n    }\r\n\r\n    return (\r\n    <div>\r\n        <Button \r\n        variant=\"primary\" \r\n        key = \"new\"\r\n        onClick = {onClick}\r\n        style = {{backgroundColor : toggle.color, width: \"100%\"}}\r\n        className = 'btn' > {toggle.text}\r\n        </Button>\r\n\r\n        {toggle.state || <NewRoomForm createRoom = {createRoom} user = {user} enterMoney = {enterMoney}/>}\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default NewRoomButton;\r\n  ","import React from \"react\";\r\nimport Login from \"./Login\"\r\nimport NewRoomButton from \"./NewRoomButton\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport Slider from 'react-input-slider';\r\nimport { useState } from \"react\";\r\n\r\nconst Rooms = ({ rooms , joinRoom, createRoom, user}) => {\r\n    const [enterMoney, setEnterMoney] = useState({ x: parseInt(user.money/2) });\r\n\r\n    return(\r\n    <div id = \"room-list\" className='room-list'>\r\n        <h4 id = \"availableRooms\">Available Rooms</h4>\r\n        <div>\r\n            <label> {enterMoney.x} $ </label>\r\n            <Slider xmin = {parseInt(user.money/10)} xmax = {user.money} x={enterMoney.x} onChange={({ x }) => setEnterMoney(enterMoney => ({ ...enterMoney, x }))} />\r\n        </div>\r\n        <NewRoomButton createRoom = {createRoom} user = {user} enterMoney = {enterMoney.x}/>\r\n        {\r\n            rooms.map(room=>(\r\n                <Button key = {room.id} onClick={() => {joinRoom(room.id, enterMoney.x)}}>{room.name} {room.numberOfPlayers}/5</Button>\r\n            ))\r\n        }\r\n    </div>);\r\n};\r\n\r\nexport default Rooms;","import { Form, Button, FormControl, InputGroup } from 'react-bootstrap';\r\nimport { useState } from 'react';\r\n\r\nconst SendMessageForm = ({ sendMessage }) => {\r\n    const [message, setMessage] = useState('');\r\n\r\n    return <Form\r\n        onSubmit={e => {\r\n            e.preventDefault();\r\n            sendMessage(message);\r\n            setMessage('');\r\n        }}>\r\n        <InputGroup>\r\n            <FormControl type=\"user\" placeholder=\"message...\"\r\n                onChange={e => setMessage(e.target.value)} value={message} />\r\n            <InputGroup.Append>\r\n                <Button variant=\"primary\" type=\"submit\" disabled={!message}>Send</Button>\r\n            </InputGroup.Append>\r\n        </InputGroup>\r\n    </Form>\r\n}\r\n\r\nexport default SendMessageForm;","import { useEffect, useRef } from 'react';\r\n\r\nconst MessageContainer = ({ messages }) => {\r\n    const messageRef = useRef();\r\n    useEffect(() => {\r\n        if (messageRef && messageRef.current) {\r\n            const { scrollHeight, clientHeight } = messageRef.current;\r\n            messageRef.current.scrollTo({ left: 0, top: scrollHeight - clientHeight, behavior: 'smooth' });\r\n        }\r\n    }, [messages]);\r\n\r\n    return <div ref={messageRef} className='message-container' >\r\n        {messages.map((m, index) =>\r\n            <div key={index} className='user-message'>\r\n                <div className='message bg-primary'>{m.message}</div>\r\n                <div className='from-user'>{m.username}</div>\r\n            </div>\r\n        )}\r\n    </div>\r\n}\r\n\r\nexport default MessageContainer;","import SendMessageForm from './SendMessageForm';\r\nimport MessageContainer from './MessageContainer';\r\nimport ConnectedUsers from './ConnectedUsers';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst Chat = ({ sendMessage, messages, users, closeConnection, joinRoom}) => {\r\n    return(\r\n    <div>\r\n        <ConnectedUsers users={users} />\r\n        <div className='chat'>\r\n            <MessageContainer messages={messages} />\r\n            <SendMessageForm sendMessage={sendMessage} />\r\n        </div>\r\n    </div>)\r\n};\r\n\r\nexport default Chat;","import { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport ConnectedUsers from './ConnectedUsers';\r\nimport Rooms from './Rooms';\r\n\r\nconst Lobby = ({ joinRoom, rooms, createRoom, user}) => {\r\n\r\n    return (\r\n        <div className='available-rooms'>\r\n            <Rooms rooms = {rooms} joinRoom = {joinRoom} createRoom = {createRoom} user = {user} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Lobby;","export default __webpack_public_path__ + \"static/media/poker_table.87ff0626.png\";","export default __webpack_public_path__ + \"static/media/user.73a0bc1f.png\";","export default __webpack_public_path__ + \"static/media/background.0eba5a55.png\";","export default __webpack_public_path__ + \"static/media/back_of_card.f07ef3ff.png\";","export default __webpack_public_path__ + \"static/media/dealer.d4c14bda.png\";","export default __webpack_public_path__ + \"static/media/2_of_hearts.c2cb81fb.png\";","export default __webpack_public_path__ + \"static/media/3_of_hearts.d50c0a08.png\";","export default __webpack_public_path__ + \"static/media/4_of_hearts.436fe356.png\";","export default __webpack_public_path__ + \"static/media/5_of_hearts.f407aa6f.png\";","export default __webpack_public_path__ + \"static/media/6_of_hearts.3fff0835.png\";","export default __webpack_public_path__ + \"static/media/7_of_hearts.fdc0fa83.png\";","export default __webpack_public_path__ + \"static/media/8_of_hearts.cff7b360.png\";","export default __webpack_public_path__ + \"static/media/9_of_hearts.a896f989.png\";","export default __webpack_public_path__ + \"static/media/10_of_hearts.bf72f319.png\";","export default __webpack_public_path__ + \"static/media/jack_of_hearts.f623f209.png\";","export default __webpack_public_path__ + \"static/media/queen_of_hearts.746a7ee8.png\";","export default __webpack_public_path__ + \"static/media/king_of_hearts.67c7a876.png\";","export default __webpack_public_path__ + \"static/media/ace_of_hearts.5a72df7d.png\";","export default __webpack_public_path__ + \"static/media/2_of_spades.b9261a5e.png\";","export default __webpack_public_path__ + \"static/media/3_of_spades.5aea0220.png\";","export default __webpack_public_path__ + \"static/media/4_of_spades.8f066844.png\";","export default __webpack_public_path__ + \"static/media/5_of_spades.bffe8ee0.png\";","export default __webpack_public_path__ + \"static/media/6_of_spades.1cbd30ed.png\";","export default __webpack_public_path__ + \"static/media/7_of_spades.1517728e.png\";","export default __webpack_public_path__ + \"static/media/8_of_spades.c8c922f0.png\";","export default __webpack_public_path__ + \"static/media/9_of_spades.dcce4a16.png\";","export default __webpack_public_path__ + \"static/media/10_of_spades.c9f933df.png\";","export default __webpack_public_path__ + \"static/media/jack_of_spades.3fa41aad.png\";","export default __webpack_public_path__ + \"static/media/queen_of_spades.c9de6912.png\";","export default __webpack_public_path__ + \"static/media/king_of_spades.fda148e5.png\";","export default __webpack_public_path__ + \"static/media/ace_of_spades.a24049b6.png\";","export default __webpack_public_path__ + \"static/media/2_of_clubs.d5d968ca.png\";","export default __webpack_public_path__ + \"static/media/3_of_clubs.bbea0442.png\";","export default __webpack_public_path__ + \"static/media/4_of_clubs.e6ba95ce.png\";","export default __webpack_public_path__ + \"static/media/5_of_clubs.4397c46f.png\";","export default __webpack_public_path__ + \"static/media/6_of_clubs.b44599ca.png\";","export default __webpack_public_path__ + \"static/media/7_of_clubs.efd12036.png\";","export default __webpack_public_path__ + \"static/media/8_of_clubs.78dfd743.png\";","export default __webpack_public_path__ + \"static/media/9_of_clubs.8e317f62.png\";","export default __webpack_public_path__ + \"static/media/10_of_clubs.1e849b92.png\";","export default __webpack_public_path__ + \"static/media/jack_of_clubs.316b8303.png\";","export default __webpack_public_path__ + \"static/media/queen_of_clubs.ef480115.png\";","export default __webpack_public_path__ + \"static/media/king_of_clubs.b70624b5.png\";","export default __webpack_public_path__ + \"static/media/ace_of_clubs.f2dd09c0.png\";","export default __webpack_public_path__ + \"static/media/2_of_diamonds.a51b192d.png\";","export default __webpack_public_path__ + \"static/media/3_of_diamonds.b78fe80c.png\";","export default __webpack_public_path__ + \"static/media/4_of_diamonds.e86dcc4c.png\";","export default __webpack_public_path__ + \"static/media/5_of_diamonds.ced27ce3.png\";","export default __webpack_public_path__ + \"static/media/6_of_diamonds.b19504c1.png\";","export default __webpack_public_path__ + \"static/media/7_of_diamonds.fe13bd1b.png\";","export default __webpack_public_path__ + \"static/media/8_of_diamonds.b1389da2.png\";","export default __webpack_public_path__ + \"static/media/9_of_diamonds.ae87f8c3.png\";","export default __webpack_public_path__ + \"static/media/10_of_diamonds.f5f2d107.png\";","export default __webpack_public_path__ + \"static/media/jack_of_diamonds.afe516e9.png\";","export default __webpack_public_path__ + \"static/media/queen_of_diamonds.91139054.png\";","export default __webpack_public_path__ + \"static/media/king_of_diamonds.87c79c7e.png\";","export default __webpack_public_path__ + \"static/media/ace_of_diamonds.326a309b.png\";","// images.js\r\nimport poker_table from './poker_table.png';\r\nimport user from './user.png';\r\nimport background from './background.png'\r\nimport back_of_card from './Cards/back_of_card.png'\r\nimport dealer from './dealer.png'\r\n\r\nimport two_of_hearts   from './Cards/2_of_hearts.png';\r\nimport three_of_hearts from './Cards/3_of_hearts.png';\r\nimport four_of_hearts  from './Cards/4_of_hearts.png';\r\nimport five_of_hearts  from './Cards/5_of_hearts.png';\r\nimport six_of_hearts   from './Cards/6_of_hearts.png';\r\nimport seven_of_hearts from './Cards/7_of_hearts.png';\r\nimport eight_of_hearts from './Cards/8_of_hearts.png';\r\nimport nine_of_hearts  from './Cards/9_of_hearts.png';\r\nimport ten_of_hearts   from './Cards/10_of_hearts.png';\r\nimport jack_of_hearts  from './Cards/jack_of_hearts.png';\r\nimport queen_of_hearts from './Cards/queen_of_hearts.png';\r\nimport king_of_hearts  from './Cards/king_of_hearts.png';\r\nimport ace_of_hearts   from './Cards/ace_of_hearts.png';\r\n\r\nimport two_of_spades   from './Cards/2_of_spades.png';\r\nimport three_of_spades from './Cards/3_of_spades.png';\r\nimport four_of_spades  from './Cards/4_of_spades.png';\r\nimport five_of_spades  from './Cards/5_of_spades.png';\r\nimport six_of_spades   from './Cards/6_of_spades.png';\r\nimport seven_of_spades from './Cards/7_of_spades.png';\r\nimport eight_of_spades from './Cards/8_of_spades.png';\r\nimport nine_of_spades  from './Cards/9_of_spades.png';\r\nimport ten_of_spades   from './Cards/10_of_spades.png';\r\nimport jack_of_spades  from './Cards/jack_of_spades.png';\r\nimport queen_of_spades from './Cards/queen_of_spades.png';\r\nimport king_of_spades  from './Cards/king_of_spades.png';\r\nimport ace_of_spades   from './Cards/ace_of_spades.png';\r\n\r\nimport two_of_clubs   from './Cards/2_of_clubs.png';\r\nimport three_of_clubs from './Cards/3_of_clubs.png';\r\nimport four_of_clubs  from './Cards/4_of_clubs.png';\r\nimport five_of_clubs  from './Cards/5_of_clubs.png';\r\nimport six_of_clubs   from './Cards/6_of_clubs.png';\r\nimport seven_of_clubs from './Cards/7_of_clubs.png';\r\nimport eight_of_clubs from './Cards/8_of_clubs.png';\r\nimport nine_of_clubs  from './Cards/9_of_clubs.png';\r\nimport ten_of_clubs   from './Cards/10_of_clubs.png';\r\nimport jack_of_clubs  from './Cards/jack_of_clubs.png';\r\nimport queen_of_clubs from './Cards/queen_of_clubs.png';\r\nimport king_of_clubs  from './Cards/king_of_clubs.png';\r\nimport ace_of_clubs   from './Cards/ace_of_clubs.png';\r\n\r\nimport two_of_diamonds   from './Cards/2_of_diamonds.png';\r\nimport three_of_diamonds from './Cards/3_of_diamonds.png';\r\nimport four_of_diamonds  from './Cards/4_of_diamonds.png';\r\nimport five_of_diamonds  from './Cards/5_of_diamonds.png';\r\nimport six_of_diamonds   from './Cards/6_of_diamonds.png';\r\nimport seven_of_diamonds from './Cards/7_of_diamonds.png';\r\nimport eight_of_diamonds from './Cards/8_of_diamonds.png';\r\nimport nine_of_diamonds  from './Cards/9_of_diamonds.png';\r\nimport ten_of_diamonds   from './Cards/10_of_diamonds.png';\r\nimport jack_of_diamonds  from './Cards/jack_of_diamonds.png';\r\nimport queen_of_diamonds from './Cards/queen_of_diamonds.png';\r\nimport king_of_diamonds  from './Cards/king_of_diamonds.png';\r\nimport ace_of_diamonds   from './Cards/ace_of_diamonds.png';\r\n\r\nconst images_src = {\r\n  poker_table: poker_table,\r\n  user: user,\r\n  background: background,\r\n  back_of_card: back_of_card,\r\n  dealer: dealer,\r\n\r\n    two_of_hearts  : two_of_hearts  ,\r\n    three_of_hearts: three_of_hearts,\r\n    four_of_hearts : four_of_hearts ,\r\n    five_of_hearts : five_of_hearts ,\r\n    six_of_hearts  : six_of_hearts  ,\r\n    seven_of_hearts: seven_of_hearts,\r\n    eight_of_hearts: eight_of_hearts,\r\n    nine_of_hearts : nine_of_hearts ,\r\n    ten_of_hearts  : ten_of_hearts  ,\r\n    jack_of_hearts : jack_of_hearts ,\r\n    queen_of_hearts: queen_of_hearts,\r\n    king_of_hearts : king_of_hearts ,\r\n    ace_of_hearts  : ace_of_hearts  ,\r\n\r\n    two_of_spades  : two_of_spades  ,\r\n    three_of_spades: three_of_spades,\r\n    four_of_spades : four_of_spades ,\r\n    five_of_spades : five_of_spades ,\r\n    six_of_spades  : six_of_spades  ,\r\n    seven_of_spades: seven_of_spades,\r\n    eight_of_spades: eight_of_spades,\r\n    nine_of_spades : nine_of_spades ,\r\n    ten_of_spades  : ten_of_spades  ,\r\n    jack_of_spades : jack_of_spades ,\r\n    queen_of_spades: queen_of_spades,\r\n    king_of_spades : king_of_spades ,\r\n    ace_of_spades  : ace_of_spades  ,\r\n\r\n    two_of_clubs  : two_of_clubs  ,\r\n    three_of_clubs: three_of_clubs,\r\n    four_of_clubs : four_of_clubs ,\r\n    five_of_clubs : five_of_clubs ,\r\n    six_of_clubs  : six_of_clubs  ,\r\n    seven_of_clubs: seven_of_clubs,\r\n    eight_of_clubs: eight_of_clubs,\r\n    nine_of_clubs : nine_of_clubs ,\r\n    ten_of_clubs  : ten_of_clubs  ,\r\n    jack_of_clubs : jack_of_clubs ,\r\n    queen_of_clubs: queen_of_clubs,\r\n    king_of_clubs : king_of_clubs ,\r\n    ace_of_clubs  : ace_of_clubs  ,\r\n\r\n    two_of_diamonds  : two_of_diamonds  ,\r\n    three_of_diamonds: three_of_diamonds,\r\n    four_of_diamonds : four_of_diamonds ,\r\n    five_of_diamonds : five_of_diamonds ,\r\n    six_of_diamonds  : six_of_diamonds  ,\r\n    seven_of_diamonds: seven_of_diamonds,\r\n    eight_of_diamonds: eight_of_diamonds,\r\n    nine_of_diamonds : nine_of_diamonds ,\r\n    ten_of_diamonds  : ten_of_diamonds  ,\r\n    jack_of_diamonds : jack_of_diamonds ,\r\n    queen_of_diamonds: queen_of_diamonds,\r\n    king_of_diamonds : king_of_diamonds ,\r\n    ace_of_diamonds  : ace_of_diamonds  \r\n};\r\n\r\nexport default images_src;","const cardValues = [\r\n    \"two\",\r\n    \"three\",\r\n    \"four\",\r\n    \"five\",\r\n    \"six\",\r\n    \"seven\",\r\n    \"eight\",\r\n    \"nine\",\r\n    \"ten\",\r\n    \"jack\",\r\n    \"queen\",\r\n    \"king\",\r\n    \"ace\"\r\n];\r\n\r\nconst cardSuits = [\r\n    \"clubs\",\r\n    \"hearts\",\r\n    \"spades\",\r\n    \"diamonds\"\r\n]\r\n\r\nexport {cardValues, cardSuits};","import { useState, useEffect } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport Chat from './Chat';\r\nimport images_src from \"../resources/index\"\r\nimport { cardSuits, cardValues } from \"./Cards.js\"\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport Slider from 'react-input-slider';\r\n\r\nconst Table = ({ joinRoom, LeaveRoom, sendMessage, connection, messages, roomStatus, user}) => {\r\n    // CONSTANTS\r\n    const WIDTH = 946;\r\n    const HEIGHT = Math.round(WIDTH *0.519);\r\n    const USER_SIZE = 100;\r\n    const POSITIONS = [[WIDTH/2, 400],[184,337],[217,84]];\r\n    POSITIONS[3] = [WIDTH - POSITIONS[2][0] ,POSITIONS[2][1] ];\r\n    POSITIONS[4] = [WIDTH - POSITIONS[1][0] ,POSITIONS[1][1] ];\r\n    const TEXT_OFFSET = 77;\r\n    const PLAYER_NUM = 5;\r\n    const CARD_PROPORTIONS = 6;\r\n    const CARD_WIDTH = 500/ CARD_PROPORTIONS;\r\n    const CARD_HEIGHT = 726/ CARD_PROPORTIONS; \r\n    const CARD_OFFSET = [120,95];\r\n    const CARD_POSITIONS = [];\r\n    const CARD_SPACINGS = 6;\r\n    for(var i =-2; i<3; i++){\r\n        CARD_POSITIONS.push([WIDTH/2 + (i * (CARD_WIDTH+CARD_SPACINGS)), HEIGHT*17/40]);\r\n    }\r\n    const CHIP_WIDTH = 40;\r\n    const CHIP_HEIGHT = 40; \r\n\r\n    //number of images to load\r\n    var image_num = Object.keys(images_src).length;\r\n\r\n    //used to keep track of how many images loaded\r\n    const [loaded_num, setLoadedNum] = useState(0);\r\n\r\n    // Asrray of loaded images\r\n    const [loaded_img, setLoadedImg] = useState();\r\n\r\n    const [Talking, setTalking] = useState(false);\r\n    const [Dealer, setDealer] = useState(false);\r\n\r\n    const [counter, setCounter] = useState(roomStatus.turnTime);\r\n\r\n    const [enterMoney, setEnterMoney] = useState({ y: 0 });\r\n\r\n    useEffect(()=>{\r\n        let myInterval = setInterval(() => {\r\n                if (counter > 0 && roomStatus.stage != 0 && roomStatus.stage != 5) {\r\n                    setCounter(counter - 1);\r\n                }\r\n                if (counter === 0) {\r\n                    clearInterval(myInterval)\r\n                } \r\n            }, 1000)\r\n            return ()=> {\r\n                clearInterval(myInterval);\r\n              };\r\n        });\r\n\r\n    // TODO move to user class\r\n    const drawUser = (context, position, user) => {\r\n        // Drawing user image\r\n        context.drawImage(loaded_img['user'],\r\n        POSITIONS[position][0] - USER_SIZE/2,\r\n        POSITIONS[position][1] - USER_SIZE/2,\r\n        USER_SIZE,\r\n        USER_SIZE);\r\n\r\n        // Offset used to place cards to the right or left of the player\r\n        var offset = 1\r\n        if(position<3)\r\n            offset = -1;\r\n\r\n        // Checking game has started and user has cards\r\n        if(roomStatus.stage > 0 && user.isActive == true){\r\n            // Drawing cards\r\n            if(user.cards.length == 2){\r\n                for(var i = 0; i < 2; i++){\r\n                    context.drawImage(loaded_img[cardValues[user.cards[i].value] + '_of_' + cardSuits[user.cards[i].suit]],\r\n                    POSITIONS[position][0] - CARD_WIDTH/2 + offset* CARD_OFFSET[i],\r\n                    POSITIONS[position][1] - CARD_HEIGHT/2,\r\n                    CARD_WIDTH,\r\n                    CARD_HEIGHT);\r\n                }\r\n            }\r\n            else // Drawing back of cards\r\n            {\r\n                for(var i =0; i < 2; i++){\r\n                    context.drawImage(loaded_img['back_of_card'],\r\n                    POSITIONS[position][0] - CARD_WIDTH/2 + offset* CARD_OFFSET[i],\r\n                    POSITIONS[position][1] - CARD_HEIGHT/2,\r\n                    CARD_WIDTH,\r\n                    CARD_HEIGHT);\r\n                }\r\n            }\r\n\r\n            if(user.position == roomStatus.dealerPosition)\r\n            {\r\n                context.drawImage(loaded_img['dealer'],\r\n                POSITIONS[position][0],\r\n                POSITIONS[position][1],\r\n                CHIP_WIDTH,\r\n                CHIP_HEIGHT);\r\n            }\r\n        }\r\n\r\n        // Drawing Winner sign\r\n        if(user.isWinner && roomStatus.stage == 5)\r\n        {\r\n            context.font = \"50px Arial\";\r\n            context.strokeStyle= \"black\"; //set the color of the stroke line \r\n            context.fillStyle = \"white\";\r\n            context.lineWidth = 6;  //define the width of the stroke line\r\n            context.strokeText(\"Winner!\",\r\n            POSITIONS[position][0],\r\n            POSITIONS[position][1] - TEXT_OFFSET\r\n            );\r\n            context.fillText(\"Winner!\",\r\n            POSITIONS[position][0],\r\n            POSITIONS[position][1] - TEXT_OFFSET\r\n            );\r\n        }\r\n\r\n        // Writing User name and money\r\n        context.font = \"20px Arial\";\r\n        context.strokeStyle= \"black\"; //set the color of the stroke line \r\n        context.fillStyle = \"white\";\r\n        context.lineWidth = 7;  //define the width of the stroke line\r\n        context.textAlign = \"center\";\r\n        context.backgroundColor = \"white\";\r\n        context.strokeText(user.username + user.moneyInTable+'$' + ' ' + user.moneyInTurn,\r\n        POSITIONS[position][0],\r\n        POSITIONS[position][1] + TEXT_OFFSET\r\n        );\r\n        context.fillText(user.username + user.moneyInTable+'$' + ' ' + user.moneyInTurn,\r\n        POSITIONS[position][0],\r\n        POSITIONS[position][1] + TEXT_OFFSET\r\n        );\r\n    }\r\n\r\n    const drawTableStatus = (context) => {\r\n        // Loading cards on table\r\n        if(roomStatus.cardsOnTable != undefined){ // TODO throw an exception?\r\n            for(var i =0; i < roomStatus.cardsOnTable.length; i++){\r\n                context.drawImage(loaded_img[cardValues[roomStatus.cardsOnTable[i].value] + '_of_' + cardSuits[roomStatus.cardsOnTable[i].suit]],\r\n                CARD_POSITIONS[i][0] - CARD_WIDTH/2,\r\n                CARD_POSITIONS[i][1] - CARD_HEIGHT/2,\r\n                CARD_WIDTH,\r\n                CARD_HEIGHT);\r\n            }\r\n        }\r\n\r\n        // Writing pot amount\r\n        context.font = \"20px Arial\";\r\n        context.fillStyle = \"white\";\r\n        context.textAlign = \"center\";\r\n        context.backgroundColor = \"white\";\r\n        context.fillText(roomStatus.pot +'$',\r\n        WIDTH/2,\r\n        HEIGHT*5/8);\r\n    }\r\n\r\n    // Loading all images upon window loading\r\n    useEffect(()=>{\r\n        //loading all assets\r\n        setLoadedImg(()=>{\r\n            var tmp = new Object();\r\n            for(var src in images_src){\r\n                tmp[src] = new Image();\r\n                tmp[src].src = images_src[src];\r\n                tmp[src].onload = ()=>{\r\n                    setLoadedNum(loaded_num => loaded_num+1)\r\n                }\r\n            }\r\n            return tmp;\r\n        });\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        // If not loaded yet return\r\n        if(loaded_num < image_num)\r\n            return;\r\n\r\n        // Render\r\n        var ctx = document.getElementById(\"myCanvas\").getContext(\"2d\");\r\n        ctx.drawImage(loaded_img['poker_table'],0,0,WIDTH,HEIGHT)\r\n\r\n\r\n        for(let i =0; i<roomStatus.users.length; i++){\r\n            drawUser(ctx, (roomStatus.users[i].position - user.position +PLAYER_NUM) % PLAYER_NUM, roomStatus.users[i])\r\n        }\r\n\r\n        if(user.position == roomStatus.talkingPosition)\r\n            setTalking(true);\r\n        else\r\n            setTalking(false);\r\n\r\n        if(user.position == roomStatus.dealerPosition)\r\n            setDealer(true);\r\n        else\r\n            setDealer(false);\r\n\r\n        drawTableStatus(ctx);\r\n        console.log(roomStatus.turnTime);\r\n        setCounter(roomStatus.turnTime);\r\n\r\n    },[loaded_num, roomStatus])\r\n    \r\n\r\n    return (\r\n    <div>\r\n        <div style = {{width:`${WIDTH}px`, height:`${HEIGHT}px`, position: 'relative'}}>\r\n            <canvas\r\n                style = {{position:'absolute'}}\r\n                id=\"myCanvas\"\r\n                width={WIDTH}\r\n                height={HEIGHT}>\r\n            </canvas>\r\n\r\n            <div style={{ position:'absolute', width: 120, height: 120,\r\n            marginLeft :`${POSITIONS[(roomStatus.talkingPosition - user.position +PLAYER_NUM) % PLAYER_NUM][0] - 60}px`,\r\n            marginTop : `${POSITIONS[(roomStatus.talkingPosition - user.position +PLAYER_NUM) % PLAYER_NUM][1] - 60}px`}}>\r\n                { roomStatus.stage != 0 && roomStatus.stage != 5 &&\r\n                 <CircularProgressbar value={counter} maxValue={roomStatus.turnTime} /> }\r\n            </div>\r\n\r\n            <div style = {{position:'absolute'}}>\r\n                <Button style = {{position:'absolute'}} variant='danger' onClick={() => LeaveRoom()}>Leave Room</Button>\r\n                    {(roomStatus.stage != 0 && roomStatus.stage != 5) && // Only if playing game show buttons\r\n                    <div>\r\n\r\n                    <div style ={{position:'absolute', marginLeft:\"543px\", marginTop: \"343px\", height: \"90px\"}}>\r\n                        {((Talking) && (roomStatus.turnStake < user.moneyInTable)) && \r\n                        <Slider style ={{color: \"#7d0015\", height: \"120px\"}} \r\n                        yreverse = {true} axis = 'y' ymin = {roomStatus.turnStake} ymax = {user.moneyInTable} y={enterMoney.y} onChange={({ y }) => setEnterMoney(enterMoney => ({ ...enterMoney, y }))} />\r\n                        }\r\n                    </div>\r\n\r\n                    <div className='button-list' style = {{marginLeft :`${WIDTH*3/5}px`, marginTop :`${HEIGHT*2/3}px`}}>\r\n                        \r\n                        <Button \r\n                        disabled = {(!Talking) || (user.moneyInTurn < roomStatus.turnStake)}        \r\n                        variant=\"dark\" key = \"Check\" \r\n                        onClick={() =>{connection.invoke(\"ReceiveCheck\")}}>\r\n                        Check\r\n                        </Button>\r\n                        \r\n                        <Button \r\n                        disabled = {(!Talking)  || (user.moneyInTurn == roomStatus.turnStake)} \r\n                        variant=\"dark\" key = \"Call\" \r\n                        onClick={() => {connection.invoke(\"ReceiveCall\")}}>\r\n                        Call {(roomStatus.turnStake > user.moneyInTurn) ? (roomStatus.turnStake - user.moneyInTurn): null }\r\n                        </Button>\r\n                        \r\n                        <Button \r\n                        disabled = {(!Talking) || (roomStatus.turnStake >= user.moneyInTable)} \r\n                        variant=\"dark\" key = \"Raise\" \r\n                        onClick={() =>{connection.invoke(\"ReceiveRaise\", enterMoney.y)}}>\r\n                        Raise {enterMoney.y}\r\n                        </Button>\r\n                        \r\n                        <Button disabled = {(!Talking)}\r\n                        variant=\"dark\" key = \"Fold\" \r\n                        onClick={() => {connection.invoke(\"ReceiveFold\")}}>\r\n                        Fold\r\n                        </Button>\r\n\r\n                    </div>\r\n                    </div>\r\n                    }\r\n            </div>\r\n        </div>\r\n        <Chat sendMessage={sendMessage} messages={messages} users={roomStatus.users} joinRoom = {joinRoom}/>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Table;","import { useState, useEffect} from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport ConnectedUsers from './ConnectedUsers';\r\nimport Rooms from './Rooms';\r\nimport Chat from './Chat';\r\nimport Lobby from './Lobby';\r\nimport Table from './Table';\r\n\r\n\r\nconst Game = ({ joinRoom, LeaveRoom, rooms, sendMessage, messages, roomStatus , createRoom, user, connection}) => {\r\n\r\n    return (\r\n        <div>\r\n            {\r\n            (user.roomId == null)?\r\n                <Lobby joinRoom={joinRoom} createRoom = {createRoom} rooms = {rooms} user = {user}/> :\r\n                <Table joinRoom={joinRoom} connection = {connection} LeaveRoom = {LeaveRoom} sendMessage = {sendMessage}\r\n                messages = {messages} roomStatus = {roomStatus} user = {user}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game;","import React from \"react\";\r\nimport Login from \"./Login\"\r\nimport NewRoomButton from \"./NewRoomButton\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport Slider from 'react-input-slider';\r\nimport { useState } from \"react\";\r\n\r\nconst UserStats = ({ user }) => {\r\n    return(\r\n        <div>\r\n        <h4 style= {{textAlign: \"left\", position:\"absolute\", padding:\"10px\"}}>Hello {user.username}!</h4>\r\n        <h4 style= {{textAlign: \"right\", padding:\"10px\"}}>{user.money}$</h4>\r\n        </div>\r\n        );\r\n};\r\n\r\nexport default UserStats;\r\n","import { useState } from 'react';\r\nimport { HubConnectionBuilder, LogLevel } from '@microsoft/signalr';\r\nimport Login from './components/Login';\r\nimport Game from './components/Game';\r\nimport UserStats from './components/UserStats';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport background from './resources/background.png'\r\nimport { ConsoleLogger } from '@microsoft/signalr/dist/esm/Utils';\r\n\r\nconst App = () => {\r\n  const [connection, setConnection] = useState();\r\n  const [messages, setMessages] = useState([]);\r\n  const [roomStatus, setRoomStatus] = useState([]);\r\n  const [rooms,setRooms] = useState([]);\r\n  const [user, setUser] = useState({});\r\n\r\n  const joinGame = async (username, password) => {\r\n    try {\r\n      //establishing connection\r\n      const connection = new HubConnectionBuilder()\r\n        .withUrl(\"https://localhost:44382/poker\")\r\n        .configureLogging(LogLevel.Information)\r\n        .build();\r\n        connection.serverTimeoutInMilliseconds = 100000; // 100 second\r\n\r\n        connection.on(\"RoomStatus\", (roomStatus) => {\r\n          console.log(roomStatus)\r\n          setRoomStatus(roomStatus);\r\n        });\r\n\r\n        connection.on(\"ReceiveMessage\", (username, message) => {\r\n          console.log(username);\r\n          setMessages(messages => [...messages, { username, message }]);\r\n        });\r\n\r\n        connection.on(\"AllRoomsStatus\", (status) => {\r\n          console.log(status);\r\n          setRooms(status.rooms);\r\n        });\r\n\r\n        // On receiving sign in confirmation/rejection\r\n        connection.on(\"Alert\", (status) => {\r\n          alert(status);\r\n          return;\r\n        });\r\n\r\n        // Username and money\r\n        connection.on(\"UserStatus\", (status) => {\r\n          console.log(status)\r\n          setUser(status);\r\n        });\r\n        \r\n        //resetting all hooks\r\n        connection.onclose(e => {\r\n          setConnection();\r\n          setMessages([]);\r\n          setRoomStatus([]);\r\n          setUser({});\r\n          setRooms([]);\r\n        });\r\n\r\n        //on initial connect move to Lobby\r\n        await connection.start();\r\n        await connection.invoke(\"SignIn\",  username, password );\r\n        setConnection(connection);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n  }\r\n\r\n  const joinRoom = async (roomId, enterMoney) => {\r\n    try {    \r\n      setMessages([]);      // clearing all messages on room leave  \r\n      await connection.invoke(\"JoinRoom\", roomId, enterMoney);      //invoking join to the new room\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  const createRoom = async (roomName, enterMoney) => {\r\n    try {\r\n      await connection.invoke(\"createRoom\", roomName, parseInt(enterMoney));      //invoking join to the new room\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  const sendMessage = async (message) => {\r\n    try {\r\n      await connection.invoke(\"SendMessage\", message);      //invoking send message\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  //TODO implement\r\n  const closeConnection = async () => {\r\n    try {\r\n      connection.closeConnection();\r\n      setConnection('');\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  const LeaveRoom = async () => {\r\n     //invoking send message\r\n    await connection.invoke(\"LeaveRoom\");   \r\n    try {\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ zIndex : '-2',backgroundImage: `url(${background})` , height: '120%', width:'100%', position:'absolute'}}> \r\n      <div className='bounding-box'>\r\n        <div className='background-gray'/>\r\n        {connection && <UserStats user= {user}/>}\r\n        <div className='app'>\r\n          <h2>Poker Online</h2>\r\n          <hr className='line' />\r\n            {!connection ?\r\n              <Login joinGame={joinGame} /> : \r\n              <Game joinRoom={joinRoom} \r\n                    rooms = {rooms} \r\n                    sendMessage = {sendMessage} \r\n                    messages = {messages} \r\n                    roomStatus = {roomStatus}\r\n                    user ={user}\r\n                    createRoom = {createRoom}\r\n                    LeaveRoom = {LeaveRoom}\r\n                    connection = {connection}\r\n              />\r\n            }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}